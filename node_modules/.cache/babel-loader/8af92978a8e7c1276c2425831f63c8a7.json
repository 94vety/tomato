{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { message } from \"antd\";\nimport { login, register, getTomatos, addReport, getGoodList, buyGood } from \"../services/index.js\";\n\nclass Mobx {\n  constructor() {\n    this.tomato = 0;\n    this.tomatoList = [];\n    this.goodList = [];\n\n    this.loginRequest = async data => {\n      const {\n        data: {\n          code,\n          errors,\n          data: {\n            token,\n            tomato,\n            vip,\n            admin,\n            email\n          }\n        }\n      } = await login(data);\n\n      if (code) {\n        this.tomato = tomato;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"vip\", vip);\n        localStorage.setItem(\"admin\", admin);\n        localStorage.setItem(\"username\", data.username);\n        localStorage.setItem(\"email\", email);\n        message.success(\"登录成功\");\n        return true;\n      } else {\n        message.error(errors);\n        return false;\n      }\n    };\n\n    this.registerRequest = async data => {\n      const {\n        data: {\n          code,\n          errors,\n          data: {\n            token,\n            tomato,\n            vip,\n            admin,\n            email\n          }\n        }\n      } = await register(data);\n\n      if (code) {\n        this.tomato = tomato;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"vip\", vip);\n        localStorage.setItem(\"admin\", admin);\n        localStorage.setItem(\"username\", data.username);\n        localStorage.setItem(\"email\", email);\n        message.success(\"注册成功自动登录\");\n        return true;\n      } else {\n        message.error(errors);\n        return false;\n      }\n    };\n\n    this.getTomatosRequest = async () => {\n      const {\n        data: {\n          code,\n          errors,\n          data\n        }\n      } = await getTomatos();\n      const {\n        user_report\n      } = data[0];\n\n      if (code) {\n        this.tomatoList = user_report;\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.addReportRequest = async data => {\n      const {\n        data: {\n          code,\n          errors\n        }\n      } = await addReport(data);\n\n      if (code) {\n        message.success(\"任务记录已上传\");\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.getGoodListRequest = async () => {\n      const {\n        data: {\n          code,\n          errors,\n          data\n        }\n      } = await getGoodList();\n      console.log(data);\n\n      if (code) {\n        this.goodList = data;\n      } else {\n        message.error(errors);\n      } // const event = await getGoodList();\n      // console.log(event)\n\n    };\n\n    this.buyGoodRequest = async data => {\n      const {\n        data: {\n          code,\n          errors\n        }\n      } = await buyGood(data);\n\n      if (code) {\n        message.success(\"购买成功\");\n        this.goodList = this.goodList.map(item => {\n          if (item.id === data.goods) {\n            return { ...item,\n              number: item.number - 1\n            };\n          } else {\n            return item;\n          }\n        });\n      } else {\n        message.error(errors);\n      }\n    };\n\n    makeAutoObservable(this);\n  }\n\n}\n\nconst myStore = new Mobx();\nexport default myStore;","map":{"version":3,"sources":["/Users/wuliangrui/Desktop/库里泡/item/tomato/src/store/index.js"],"names":["makeAutoObservable","message","login","register","getTomatos","addReport","getGoodList","buyGood","Mobx","constructor","tomato","tomatoList","goodList","loginRequest","data","code","errors","token","vip","admin","email","localStorage","setItem","username","success","error","registerRequest","getTomatosRequest","user_report","addReportRequest","getGoodListRequest","console","log","buyGoodRequest","map","item","id","goods","number","myStore"],"mappings":"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","sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport { message } from \"antd\";\n\nimport {\n    login,\n    register,\n    getTomatos,\n    addReport,\n    getGoodList,\n    buyGood\n} from \"../services/index.js\";\n\nclass Mobx {\n    tomato = 0\n    tomatoList = []\n    goodList = []\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    loginRequest = async(data) => {\n        const {\n            data: {\n                code, errors,\n                data: {\n                    token, tomato,\n                    vip, admin, email\n                }\n            }\n        } = await login(data);\n\n        if (code) {\n            this.tomato = tomato;\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"vip\", vip);\n            localStorage.setItem(\"admin\", admin);\n            localStorage.setItem(\"username\", data.username);\n            localStorage.setItem(\"email\", email);\n            message.success(\"登录成功\");\n            return true;\n        } else {\n            message.error(errors);\n            return false;\n        }\n    }\n\n    registerRequest = async(data) => {\n        const {\n            data: {\n                code, errors,\n                data: {\n                    token, tomato,\n                    vip, admin, email\n                }\n            }\n        } = await register(data);\n\n        if (code) {\n            this.tomato = tomato;\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"vip\", vip);\n            localStorage.setItem(\"admin\", admin);\n            localStorage.setItem(\"username\", data.username);\n            localStorage.setItem(\"email\", email);\n            message.success(\"注册成功自动登录\");\n            return true;\n        } else {\n            message.error(errors);\n            return false;\n        }\n    }\n\n    getTomatosRequest = async() => {\n        const {\n            data: {\n                code, errors,\n                data\n            }\n        } = await getTomatos();\n\n        const { user_report } = data[0];\n\n        if (code) {\n            this.tomatoList = user_report;\n        } else {\n            message.error(errors);\n        }\n    }\n\n    addReportRequest = async(data) => {\n        const {\n            data: {\n                code, errors\n            }\n        } = await addReport(data);\n\n        if (code) {\n            message.success(\"任务记录已上传\");\n        } else {\n            message.error(errors);       \n        }\n    }\n\n    getGoodListRequest = async() => {\n        const {\n            data: {\n                code, errors,\n                data\n            }\n        } = await getGoodList();\n        console.log(data);\n        if (code) {\n            this.goodList = data;\n        } else {\n            message.error(errors);\n        }\n        // const event = await getGoodList();\n        // console.log(event)\n    }\n\n    buyGoodRequest = async(data) => {\n        const {\n            data: {\n                code, errors\n            }\n        } = await buyGood(data);\n        \n        if (code) {\n            message.success(\"购买成功\");\n            this.goodList = this.goodList.map(item => {\n                if (item.id === data.goods) {\n                    return {\n                        ...item,\n                        number: item.number - 1\n                    }\n                } else {\n                    return item;\n                }\n            })\n        } else {\n            message.error(errors);\n        }\n    }\n}\n\nconst myStore = new Mobx();\nexport default myStore;\n"]},"metadata":{},"sourceType":"module"}