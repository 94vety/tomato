{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { message } from \"antd\";\nimport { login, register, getTomatos, addReport, getGoodList, buyGood, adminSelfRoom, placeSelfRoom, joinRoom, addCom, modifyCom, deleteCom, modifyRoomName, deleteUser } from \"../services/index.js\";\n\nclass Mobx {\n  constructor() {\n    this.tomato = 0;\n    this.tomatoList = [];\n    this.goodList = [];\n    this.room = {};\n    this.member = [];\n\n    this.loginRequest = async data => {\n      const {\n        data: {\n          code,\n          errors,\n          data: {\n            token,\n            tomato,\n            vip,\n            admin,\n            email\n          }\n        }\n      } = await login(data);\n\n      if (code) {\n        this.tomato = tomato;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"vip\", vip);\n        localStorage.setItem(\"admin\", admin);\n        localStorage.setItem(\"username\", data.username);\n        localStorage.setItem(\"email\", email);\n        message.success(\"登录成功\");\n        return true;\n      } else {\n        message.error(errors);\n        return false;\n      }\n    };\n\n    this.registerRequest = async data => {\n      const {\n        data: {\n          code,\n          errors,\n          data: {\n            token,\n            tomato,\n            vip,\n            admin,\n            email\n          }\n        }\n      } = await register(data);\n\n      if (code) {\n        this.tomato = tomato;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"vip\", vip);\n        localStorage.setItem(\"admin\", admin);\n        localStorage.setItem(\"username\", data.username);\n        localStorage.setItem(\"email\", email);\n        message.success(\"注册成功自动登录\");\n        return true;\n      } else {\n        message.error(errors);\n        return false;\n      }\n    };\n\n    this.getTomatosRequest = async () => {\n      const {\n        data: {\n          code,\n          errors,\n          data\n        }\n      } = await getTomatos();\n      const {\n        user_report\n      } = data[0];\n\n      if (code) {\n        this.tomatoList = user_report;\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.addReportRequest = async data => {\n      const {\n        data: {\n          code,\n          errors\n        }\n      } = await addReport(data);\n\n      if (code) {\n        message.success(\"任务记录已上传\");\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.getGoodListRequest = async () => {\n      const {\n        data: {\n          code,\n          errors,\n          data\n        }\n      } = await getGoodList();\n\n      if (code) {\n        this.goodList = data;\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.buyGoodRequest = async data => {\n      const {\n        data: {\n          code,\n          errors\n        }\n      } = await buyGood(data);\n\n      if (code) {\n        message.success(\"购买成功\");\n        this.goodList = this.goodList.map(item => {\n          if (item.id === data.goods) {\n            return { ...item,\n              number: item.number - 1\n            };\n          } else {\n            return item;\n          }\n        });\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.adminSelfRoomRequest = async () => {\n      const {\n        data: {\n          code,\n          data,\n          errors\n        }\n      } = await adminSelfRoom();\n      const {\n        member\n      } = data[0];\n\n      if (code) {\n        this.room = data[0];\n        this.member = member;\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.placeSelfRoomRequest = async () => {\n      const event = await placeSelfRoom();\n      console.log(event);\n    };\n\n    this.joinRoomRequest = async data => {\n      const {\n        data: {\n          code,\n          errors\n        }\n      } = await joinRoom(data);\n\n      if (code) {\n        message.success(\"成功加入自习室\");\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.addComRequest = async data => {\n      const {\n        data: {\n          code,\n          msg,\n          errors\n        }\n      } = await addCom(data);\n\n      if (code) {\n        message.success(msg);\n        this.getGoodListRequest();\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.modifyComRequest = async (data, id) => {\n      const {\n        data: {\n          code,\n          msg,\n          errors\n        }\n      } = await modifyCom(data, id);\n\n      if (code) {\n        message.success(msg);\n        this.getGoodListRequest();\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.deleteCom = async id => {\n      const {\n        data: {\n          code,\n          errors,\n          msg\n        }\n      } = await deleteCom(id);\n\n      if (code) {\n        message.success(msg);\n        this.getGoodListRequest();\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.modifyRoomNameRequest = async (data, id) => {\n      const {\n        data: {\n          code,\n          msg,\n          errors\n        }\n      } = await modifyRoomName(data, id);\n\n      if (code) {\n        message.success(msg);\n        myStore.adminSelfRoomRequest();\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.deleteUserRequest = async data => {\n      const {\n        data: {\n          code,\n          msg,\n          errors\n        }\n      } = await deleteUser(data);\n\n      if (code) {\n        message.success(msg);\n      } else {\n        message.error(errors);\n      }\n    };\n\n    makeAutoObservable(this);\n  }\n\n}\n\nconst myStore = new Mobx();\nexport default myStore;","map":{"version":3,"sources":["/Users/wuliangrui/Desktop/库里泡/item/tomato/src/store/index.js"],"names":["makeAutoObservable","message","login","register","getTomatos","addReport","getGoodList","buyGood","adminSelfRoom","placeSelfRoom","joinRoom","addCom","modifyCom","deleteCom","modifyRoomName","deleteUser","Mobx","constructor","tomato","tomatoList","goodList","room","member","loginRequest","data","code","errors","token","vip","admin","email","localStorage","setItem","username","success","error","registerRequest","getTomatosRequest","user_report","addReportRequest","getGoodListRequest","buyGoodRequest","map","item","id","goods","number","adminSelfRoomRequest","placeSelfRoomRequest","event","console","log","joinRoomRequest","addComRequest","msg","modifyComRequest","modifyRoomNameRequest","myStore","deleteUserRequest"],"mappings":"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","sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport { message } from \"antd\";\n\nimport {\n    login,\n    register,\n    getTomatos,\n    addReport,\n    getGoodList,\n    buyGood,\n    adminSelfRoom,\n    placeSelfRoom,\n    joinRoom,\n    addCom,\n    modifyCom,\n    deleteCom,\n    modifyRoomName,\n    deleteUser\n} from \"../services/index.js\";\n\nclass Mobx {\n    tomato = 0\n    tomatoList = []\n    goodList = []\n    room = {}\n    member = []\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    loginRequest = async(data) => {\n        const {\n            data: {\n                code, errors,\n                data: {\n                    token, tomato,\n                    vip, admin, email\n                }\n            }\n        } = await login(data);\n\n        if (code) {\n            this.tomato = tomato;\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"vip\", vip);\n            localStorage.setItem(\"admin\", admin);\n            localStorage.setItem(\"username\", data.username);\n            localStorage.setItem(\"email\", email);\n            message.success(\"登录成功\");\n            return true;\n        } else {\n            message.error(errors);\n            return false;\n        }\n    }\n\n    registerRequest = async(data) => {\n        const {\n            data: {\n                code, errors,\n                data: {\n                    token, tomato,\n                    vip, admin, email\n                }\n            }\n        } = await register(data);\n\n        if (code) {\n            this.tomato = tomato;\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"vip\", vip);\n            localStorage.setItem(\"admin\", admin);\n            localStorage.setItem(\"username\", data.username);\n            localStorage.setItem(\"email\", email);\n            message.success(\"注册成功自动登录\");\n            return true;\n        } else {\n            message.error(errors);\n            return false;\n        }\n    }\n\n    getTomatosRequest = async() => {\n        const {\n            data: {\n                code, errors,\n                data\n            }\n        } = await getTomatos();\n\n        const { user_report } = data[0];\n\n        if (code) {\n            this.tomatoList = user_report;\n        } else {\n            message.error(errors);\n        }\n    }\n\n    addReportRequest = async(data) => {\n        const {\n            data: {\n                code, errors\n            }\n        } = await addReport(data);\n\n        if (code) {\n            message.success(\"任务记录已上传\");\n        } else {\n            message.error(errors);       \n        }\n    }\n\n    getGoodListRequest = async() => {\n        const {\n            data: {\n                code, errors,\n                data\n            }\n        } = await getGoodList();\n\n        if (code) {\n            this.goodList = data;\n        } else {\n            message.error(errors);\n        }\n    }\n\n    buyGoodRequest = async(data) => {\n        const {\n            data: {\n                code, errors\n            }\n        } = await buyGood(data);\n        \n        if (code) {\n            message.success(\"购买成功\");\n            this.goodList = this.goodList.map(item => {\n                if (item.id === data.goods) {\n                    return {\n                        ...item,\n                        number: item.number - 1\n                    }\n                } else {\n                    return item;\n                }\n            })\n        } else {\n            message.error(errors);\n        }\n    }\n\n    adminSelfRoomRequest = async() => {\n        const {\n            data: {\n                code, data, errors\n            }\n        } = await adminSelfRoom();\n        const { member } = data[0];\n\n        if (code) {\n            this.room = data[0];\n            this.member = member;\n        } else {\n            message.error(errors);\n        }\n    }\n\n    placeSelfRoomRequest = async() => {\n        const event = await placeSelfRoom();\n        console.log(event);\n    }\n\n    joinRoomRequest = async(data) => {\n        const {\n            data: {\n                code, errors\n            }\n        } = await joinRoom(data);\n        \n        if (code) {\n            message.success(\"成功加入自习室\");\n        } else {\n            message.error(errors);\n        }\n    }\n\n    addComRequest = async(data) => {\n        const {\n            data: {\n                code, msg, errors\n            }\n        } = await addCom(data);\n\n        if (code) {\n            message.success(msg);\n            this.getGoodListRequest();\n        } else {\n            message.error(errors);\n        }\n    }\n\n    modifyComRequest = async(data, id) => {\n        const {\n            data: {\n                code, msg, errors\n            }\n        } = await modifyCom(data, id);\n\n        if (code) {\n            message.success(msg);\n            this.getGoodListRequest();\n        } else {\n            message.error(errors);\n        }\n    }\n\n    deleteCom = async(id) => {\n        const {\n            data: {\n                code, errors, msg\n            }\n        } = await deleteCom(id);\n\n        if (code) {\n            message.success(msg);\n            this.getGoodListRequest();\n        } else {\n            message.error(errors);\n        }\n    }\n\n    modifyRoomNameRequest = async(data, id) => {\n        const {\n            data: {\n                code, msg, errors\n            }\n        } = await modifyRoomName(data, id);\n\n        if (code) {\n            message.success(msg);\n            myStore.adminSelfRoomRequest();\n        } else {\n            message.error(errors);\n        }\n    }\n\n    deleteUserRequest = async(data) => {\n        const {\n            data: {\n                code, msg, errors\n            }\n        } = await deleteUser(data);\n\n        if (code) {\n            message.success(msg);\n        } else {\n            message.error(errors);\n        }\n    }\n}\n\nconst myStore = new Mobx();\nexport default myStore;\n"]},"metadata":{},"sourceType":"module"}