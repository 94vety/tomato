{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { message } from \"antd\";\nimport { login, register, getTomatos, addReport, getGoodList, buyGood, adminSelfRoom, placeSelfRoom, joinRoom, addCom, modifyCom, deleteCom, modifyRoomName, deleteUser, deleteGroup, quitGroup, createGroup, adoptUser } from \"../services/index.js\";\n\nclass Mobx {\n  constructor() {\n    this.tomato = 0;\n    this.tomatoList = [];\n    this.goodList = [];\n    this.room = {};\n    this.member = [];\n    this.listEmpty = true;\n    this.vip = false;\n    this.admin = false;\n\n    this.loginRequest = async data => {\n      const {\n        data: {\n          code,\n          errors,\n          data: {\n            token,\n            tomato,\n            vip,\n            admin,\n            email\n          }\n        }\n      } = await login(data);\n\n      if (code) {\n        this.tomato = tomato;\n        this.vip = vip;\n        this.admin = admin;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"username\", data.username);\n        localStorage.setItem(\"email\", email);\n        message.success(\"登录成功\");\n        return true;\n      } else {\n        message.error(errors);\n        return false;\n      }\n    };\n\n    this.registerRequest = async data => {\n      const {\n        data: {\n          code,\n          errors,\n          data: {\n            token,\n            tomato,\n            vip,\n            admin,\n            email\n          }\n        }\n      } = await register(data);\n\n      if (code) {\n        this.tomato = tomato;\n        this.vip = vip;\n        this.admin = admin;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"username\", data.username);\n        localStorage.setItem(\"email\", email);\n        message.success(\"注册成功自动登录\");\n        return true;\n      } else {\n        message.error(errors);\n        return false;\n      }\n    };\n\n    this.getTomatosRequest = async () => {\n      const {\n        data: {\n          code,\n          errors,\n          data\n        }\n      } = await getTomatos();\n      const {\n        user_report\n      } = data[0];\n\n      if (code) {\n        this.tomatoList = user_report;\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.addReportRequest = async data => {\n      const {\n        data: {\n          code,\n          errors\n        }\n      } = await addReport(data);\n\n      if (code) {\n        message.success(\"任务记录已上传\");\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.getGoodListRequest = async () => {\n      const {\n        data: {\n          code,\n          errors,\n          data\n        }\n      } = await getGoodList();\n\n      if (code) {\n        this.goodList = data;\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.buyGoodRequest = async data => {\n      const {\n        data: {\n          code,\n          errors\n        }\n      } = await buyGood(data);\n\n      if (code) {\n        message.success(\"购买成功\");\n        this.goodList = this.goodList.map(item => {\n          if (item.id === data.goods) {\n            return { ...item,\n              number: item.number - 1\n            };\n          } else {\n            return item;\n          }\n        });\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.adminSelfRoomRequest = async () => {\n      const {\n        data: {\n          code,\n          data,\n          errors\n        }\n      } = await adminSelfRoom();\n\n      if (code) {\n        if (data.length === 0) {\n          this.listEmpty = true;\n        } else {\n          const {\n            member\n          } = data[0];\n          this.listEmpty = false;\n          this.room = data[0];\n          this.member = member;\n        }\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.placeSelfRoomRequest = async () => {\n      const {\n        data: {\n          code,\n          data,\n          errors\n        }\n      } = await placeSelfRoom();\n\n      if (code) {\n        if (data.length === 0) {\n          this.listEmpty = true;\n        } else {\n          const {\n            member\n          } = data[0];\n          this.listEmpty = false;\n          this.room = data[0];\n          this.member = member;\n        }\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.joinRoomRequest = async data => {\n      const {\n        data: {\n          code,\n          errors\n        }\n      } = await joinRoom(data);\n\n      if (code) {\n        message.success(\"成功加入自习室\");\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.addComRequest = async data => {\n      const {\n        data: {\n          code,\n          msg,\n          errors\n        }\n      } = await addCom(data);\n\n      if (code) {\n        message.success(msg);\n        this.getGoodListRequest();\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.modifyComRequest = async (data, id) => {\n      const {\n        data: {\n          code,\n          msg,\n          errors\n        }\n      } = await modifyCom(data, id);\n\n      if (code) {\n        message.success(msg);\n        this.getGoodListRequest();\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.deleteCom = async id => {\n      const {\n        data: {\n          code,\n          errors,\n          msg\n        }\n      } = await deleteCom(id);\n\n      if (code) {\n        message.success(msg);\n        this.getGoodListRequest();\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.modifyRoomNameRequest = async (data, id) => {\n      const {\n        data: {\n          code,\n          msg,\n          errors\n        }\n      } = await modifyRoomName(data, id);\n\n      if (code) {\n        message.success(msg);\n        myStore.adminSelfRoomRequest();\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.deleteUserRequest = async data => {\n      const {\n        data: {\n          code,\n          msg,\n          errors\n        }\n      } = await deleteUser(data);\n\n      if (code) {\n        message.success(msg);\n        myStore.adminSelfRoomRequest();\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.deleteGroupRequest = async id => {\n      const {\n        data: {\n          code,\n          errors,\n          msg\n        }\n      } = await deleteGroup(id);\n\n      if (code) {\n        message.success(msg);\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.quitGroupRequest = async data => {\n      const {\n        data: {\n          code,\n          errors,\n          msg\n        }\n      } = await quitGroup(data);\n\n      if (code) {\n        message.success(msg);\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.createGroupRequest = async data => {\n      const {\n        data: {\n          code,\n          msg,\n          errors\n        }\n      } = await createGroup(data);\n\n      if (code) {\n        message.success(msg);\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.adoptUserRequest = async data => {\n      const {\n        data: {\n          code,\n          msg,\n          errors\n        }\n      } = await adoptUser(data);\n\n      if (code) {\n        message.success(msg);\n        myStore.adminSelfRoomRequest();\n      } else {\n        message.error(errors);\n      }\n    };\n\n    makeAutoObservable(this);\n  }\n\n}\n\nconst myStore = new Mobx();\nexport default myStore;","map":{"version":3,"sources":["/Users/wuliangrui/Desktop/库里泡/item/tomato/src/store/index.js"],"names":["makeAutoObservable","message","login","register","getTomatos","addReport","getGoodList","buyGood","adminSelfRoom","placeSelfRoom","joinRoom","addCom","modifyCom","deleteCom","modifyRoomName","deleteUser","deleteGroup","quitGroup","createGroup","adoptUser","Mobx","constructor","tomato","tomatoList","goodList","room","member","listEmpty","vip","admin","loginRequest","data","code","errors","token","email","localStorage","setItem","username","success","error","registerRequest","getTomatosRequest","user_report","addReportRequest","getGoodListRequest","buyGoodRequest","map","item","id","goods","number","adminSelfRoomRequest","length","placeSelfRoomRequest","joinRoomRequest","addComRequest","msg","modifyComRequest","modifyRoomNameRequest","myStore","deleteUserRequest","deleteGroupRequest","quitGroupRequest","createGroupRequest","adoptUserRequest"],"mappings":"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","sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport { message } from \"antd\";\n\nimport {\n    login,\n    register,\n    getTomatos,\n    addReport,\n    getGoodList,\n    buyGood,\n    adminSelfRoom,\n    placeSelfRoom,\n    joinRoom,\n    addCom,\n    modifyCom,\n    deleteCom,\n    modifyRoomName,\n    deleteUser,\n    deleteGroup,\n    quitGroup,\n    createGroup,\n    adoptUser\n} from \"../services/index.js\";\n\nclass Mobx {\n    tomato = 0\n    tomatoList = []\n    goodList = []\n    room = {}\n    member = []\n    listEmpty = true\n    vip = false\n    admin = false\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    loginRequest = async(data) => {\n        const {\n            data: {\n                code, errors,\n                data: {\n                    token, tomato,\n                    vip, admin, email\n                }\n            }\n        } = await login(data);\n\n        if (code) {\n            this.tomato = tomato;\n            this.vip = vip;\n            this.admin = admin;\n\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"username\", data.username);\n            localStorage.setItem(\"email\", email);\n            message.success(\"登录成功\");\n            return true;\n        } else {\n            message.error(errors);\n            return false;\n        }\n    }\n\n    registerRequest = async(data) => {\n        const {\n            data: {\n                code, errors,\n                data: {\n                    token, tomato,\n                    vip, admin, email\n                }\n            }\n        } = await register(data);\n\n        if (code) {\n            this.tomato = tomato;\n            this.vip = vip;\n            this.admin = admin;\n            \n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"username\", data.username);\n            localStorage.setItem(\"email\", email);\n            message.success(\"注册成功自动登录\");\n            return true;\n        } else {\n            message.error(errors);\n            return false;\n        }\n    }\n\n    getTomatosRequest = async() => {\n        const {\n            data: {\n                code, errors,\n                data\n            }\n        } = await getTomatos();\n\n        const { user_report } = data[0];\n\n        if (code) {\n            this.tomatoList = user_report;\n        } else {\n            message.error(errors);\n        }\n    }\n\n    addReportRequest = async(data) => {\n        const {\n            data: {\n                code, errors\n            }\n        } = await addReport(data);\n\n        if (code) {\n            message.success(\"任务记录已上传\");\n        } else {\n            message.error(errors);       \n        }\n    }\n\n    getGoodListRequest = async() => {\n        const {\n            data: {\n                code, errors,\n                data\n            }\n        } = await getGoodList();\n\n        if (code) {\n            this.goodList = data;\n        } else {\n            message.error(errors);\n        }\n    }\n\n    buyGoodRequest = async(data) => {\n        const {\n            data: {\n                code, errors\n            }\n        } = await buyGood(data);\n        \n        if (code) {\n            message.success(\"购买成功\");\n            this.goodList = this.goodList.map(item => {\n                if (item.id === data.goods) {\n                    return {\n                        ...item,\n                        number: item.number - 1\n                    }\n                } else {\n                    return item;\n                }\n            })\n        } else {\n            message.error(errors);\n        }\n    }\n\n    adminSelfRoomRequest = async() => {\n        const {\n            data: {\n                code, data, errors\n            }\n        } = await adminSelfRoom();\n\n        if (code) {\n            if (data.length === 0) {\n                this.listEmpty = true;\n            } else {\n                const { member } = data[0];\n                this.listEmpty = false;\n                this.room = data[0];\n                this.member = member;\n            }\n        } else {\n            message.error(errors);\n        }\n    }\n\n    placeSelfRoomRequest = async() => {\n        const {\n            data: {\n                code, data, errors\n            }\n        } = await placeSelfRoom();\n        \n        if (code) {\n            if (data.length === 0) {\n                this.listEmpty = true;\n            } else {\n                const { member } = data[0];\n                this.listEmpty = false;\n                this.room = data[0];\n                this.member = member;\n            }\n        } else {\n            message.error(errors);\n        }\n    }\n\n    joinRoomRequest = async(data) => {\n        const {\n            data: {\n                code, errors\n            }\n        } = await joinRoom(data);\n        \n        if (code) {\n            message.success(\"成功加入自习室\");\n        } else {\n            message.error(errors);\n        }\n    }\n\n    addComRequest = async(data) => {\n        const {\n            data: {\n                code, msg, errors\n            }\n        } = await addCom(data);\n\n        if (code) {\n            message.success(msg);\n            this.getGoodListRequest();\n        } else {\n            message.error(errors);\n        }\n    }\n\n    modifyComRequest = async(data, id) => {\n        const {\n            data: {\n                code, msg, errors\n            }\n        } = await modifyCom(data, id);\n\n        if (code) {\n            message.success(msg);\n            this.getGoodListRequest();\n        } else {\n            message.error(errors);\n        }\n    }\n\n    deleteCom = async(id) => {\n        const {\n            data: {\n                code, errors, msg\n            }\n        } = await deleteCom(id);\n\n        if (code) {\n            message.success(msg);\n            this.getGoodListRequest();\n        } else {\n            message.error(errors);\n        }\n    }\n\n    modifyRoomNameRequest = async(data, id) => {\n        const {\n            data: {\n                code, msg, errors\n            }\n        } = await modifyRoomName(data, id);\n\n        if (code) {\n            message.success(msg);\n            myStore.adminSelfRoomRequest();\n        } else {\n            message.error(errors);\n        }\n    }\n\n    deleteUserRequest = async(data) => {\n        const {\n            data: {\n                code, msg, errors\n            }\n        } = await deleteUser(data);\n\n        if (code) {\n            message.success(msg);\n            myStore.adminSelfRoomRequest();\n        } else {\n            message.error(errors);\n        }\n    }\n\n    deleteGroupRequest = async(id) => {\n        const {\n            data: {\n                code, errors, msg\n            }\n        } = await deleteGroup(id);\n\n        if (code) {\n            message.success(msg);\n        } else {\n            message.error(errors);\n        }\n    }\n\n    quitGroupRequest = async(data) => {\n        const {\n            data: {\n                code, errors, msg\n            }\n        } = await quitGroup(data);\n\n        if (code) {\n            message.success(msg);\n        } else {\n            message.error(errors);\n        }\n    }\n\n    createGroupRequest = async(data) => {\n        const {\n            data: {\n                code, msg, errors\n            }\n        } = await createGroup(data);\n\n        if (code) {\n            message.success(msg);\n        } else {\n            message.error(errors);\n        }\n    }\n\n    adoptUserRequest = async(data) => {\n        const {\n            data: {\n                code, msg, errors\n            }\n        } = await adoptUser(data);\n\n        if (code) {\n            message.success(msg);\n            myStore.adminSelfRoomRequest();\n        } else {\n            message.error(errors);\n        }\n    }\n}\n\nconst myStore = new Mobx();\nexport default myStore;\n"]},"metadata":{},"sourceType":"module"}