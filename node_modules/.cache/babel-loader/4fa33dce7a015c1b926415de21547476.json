{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { message } from \"antd\";\nimport { login, register, getTomatos, addReport, getGoodList, buyGood, adminSelfRoom, placeSelfRoom, joinRoom, addCom, modifyCom, deleteCom, modifyRoomName, deleteUser, deleteGroup, quitGroup, createGroup } from \"../services/index.js\";\n\nclass Mobx {\n  constructor() {\n    this.tomato = 0;\n    this.tomatoList = [];\n    this.goodList = [];\n    this.room = {};\n    this.member = [];\n    this.listEmpty = true;\n\n    this.loginRequest = async data => {\n      const {\n        data: {\n          code,\n          errors,\n          data: {\n            token,\n            tomato,\n            vip,\n            admin,\n            email\n          }\n        }\n      } = await login(data);\n\n      if (code) {\n        this.tomato = tomato;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"vip\", vip);\n        localStorage.setItem(\"admin\", admin);\n        localStorage.setItem(\"username\", data.username);\n        localStorage.setItem(\"email\", email);\n        message.success(\"登录成功\");\n        return true;\n      } else {\n        message.error(errors);\n        return false;\n      }\n    };\n\n    this.registerRequest = async data => {\n      const {\n        data: {\n          code,\n          errors,\n          data: {\n            token,\n            tomato,\n            vip,\n            admin,\n            email\n          }\n        }\n      } = await register(data);\n\n      if (code) {\n        this.tomato = tomato;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"vip\", vip);\n        localStorage.setItem(\"admin\", admin);\n        localStorage.setItem(\"username\", data.username);\n        localStorage.setItem(\"email\", email);\n        Boolean(JSON.parse(localStorage.getItem(\"admin\")));\n        Boolean(JSON.parse(localStorage.getItem(\"vip\")));\n        message.success(\"注册成功自动登录\");\n        return true;\n      } else {\n        message.error(errors);\n        return false;\n      }\n    };\n\n    this.getTomatosRequest = async () => {\n      const {\n        data: {\n          code,\n          errors,\n          data\n        }\n      } = await getTomatos();\n      const {\n        user_report\n      } = data[0];\n\n      if (code) {\n        this.tomatoList = user_report;\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.addReportRequest = async data => {\n      const {\n        data: {\n          code,\n          errors\n        }\n      } = await addReport(data);\n\n      if (code) {\n        message.success(\"任务记录已上传\");\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.getGoodListRequest = async () => {\n      const {\n        data: {\n          code,\n          errors,\n          data\n        }\n      } = await getGoodList();\n\n      if (code) {\n        this.goodList = data;\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.buyGoodRequest = async data => {\n      const {\n        data: {\n          code,\n          errors\n        }\n      } = await buyGood(data);\n\n      if (code) {\n        message.success(\"购买成功\");\n        this.goodList = this.goodList.map(item => {\n          if (item.id === data.goods) {\n            return { ...item,\n              number: item.number - 1\n            };\n          } else {\n            return item;\n          }\n        });\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.adminSelfRoomRequest = async () => {\n      const {\n        data: {\n          code,\n          data,\n          errors\n        }\n      } = await adminSelfRoom();\n\n      if (code) {\n        if (data.length === 0) {\n          this.listEmpty = true;\n        } else {\n          const {\n            member\n          } = data[0];\n          this.listEmpty = false;\n          this.room = data[0];\n          this.member = member;\n        }\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.placeSelfRoomRequest = async () => {\n      const {\n        data: {\n          code,\n          data,\n          errors\n        }\n      } = await placeSelfRoom();\n\n      if (code) {\n        if (data.length === 0) {\n          this.listEmpty = true;\n        } else {\n          const {\n            member\n          } = data[0];\n          this.listEmpty = false;\n          this.room = data[0];\n          this.member = member;\n        }\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.joinRoomRequest = async data => {\n      const {\n        data: {\n          code,\n          errors\n        }\n      } = await joinRoom(data);\n\n      if (code) {\n        message.success(\"成功加入自习室\");\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.addComRequest = async data => {\n      const {\n        data: {\n          code,\n          msg,\n          errors\n        }\n      } = await addCom(data);\n\n      if (code) {\n        message.success(msg);\n        this.getGoodListRequest();\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.modifyComRequest = async (data, id) => {\n      const {\n        data: {\n          code,\n          msg,\n          errors\n        }\n      } = await modifyCom(data, id);\n\n      if (code) {\n        message.success(msg);\n        this.getGoodListRequest();\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.deleteCom = async id => {\n      const {\n        data: {\n          code,\n          errors,\n          msg\n        }\n      } = await deleteCom(id);\n\n      if (code) {\n        message.success(msg);\n        this.getGoodListRequest();\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.modifyRoomNameRequest = async (data, id) => {\n      const {\n        data: {\n          code,\n          msg,\n          errors\n        }\n      } = await modifyRoomName(data, id);\n\n      if (code) {\n        message.success(msg);\n        myStore.adminSelfRoomRequest();\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.deleteUserRequest = async data => {\n      const {\n        data: {\n          code,\n          msg,\n          errors\n        }\n      } = await deleteUser(data);\n\n      if (code) {\n        message.success(msg);\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.deleteGroupRequest = async id => {\n      const {\n        data: {\n          code,\n          errors,\n          msg\n        }\n      } = await deleteGroup(id);\n\n      if (code) {\n        message.success(msg);\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.quitGroupRequest = async data => {\n      const {\n        data: {\n          code,\n          errors,\n          msg\n        }\n      } = await quitGroup(data);\n\n      if (code) {\n        message.success(msg);\n      } else {\n        message.error(errors);\n      }\n    };\n\n    this.createGroupRequest = async data => {\n      const {\n        data: {\n          code,\n          msg,\n          errors\n        }\n      } = await createGroup(data);\n\n      if (code) {\n        message.success(msg);\n      } else {\n        message.error(errors);\n      }\n    };\n\n    makeAutoObservable(this);\n  }\n\n}\n\nconst myStore = new Mobx();\nexport default myStore;","map":{"version":3,"sources":["/Users/wuliangrui/Desktop/库里泡/item/tomato/src/store/index.js"],"names":["makeAutoObservable","message","login","register","getTomatos","addReport","getGoodList","buyGood","adminSelfRoom","placeSelfRoom","joinRoom","addCom","modifyCom","deleteCom","modifyRoomName","deleteUser","deleteGroup","quitGroup","createGroup","Mobx","constructor","tomato","tomatoList","goodList","room","member","listEmpty","loginRequest","data","code","errors","token","vip","admin","email","localStorage","setItem","username","success","error","registerRequest","Boolean","JSON","parse","getItem","getTomatosRequest","user_report","addReportRequest","getGoodListRequest","buyGoodRequest","map","item","id","goods","number","adminSelfRoomRequest","length","placeSelfRoomRequest","joinRoomRequest","addComRequest","msg","modifyComRequest","modifyRoomNameRequest","myStore","deleteUserRequest","deleteGroupRequest","quitGroupRequest","createGroupRequest"],"mappings":"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","sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport { message } from \"antd\";\n\nimport {\n    login,\n    register,\n    getTomatos,\n    addReport,\n    getGoodList,\n    buyGood,\n    adminSelfRoom,\n    placeSelfRoom,\n    joinRoom,\n    addCom,\n    modifyCom,\n    deleteCom,\n    modifyRoomName,\n    deleteUser,\n    deleteGroup,\n    quitGroup,\n    createGroup\n} from \"../services/index.js\";\n\nclass Mobx {\n    tomato = 0\n    tomatoList = []\n    goodList = []\n    room = {}\n    member = []\n    listEmpty = true\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    loginRequest = async(data) => {\n        const {\n            data: {\n                code, errors,\n                data: {\n                    token, tomato,\n                    vip, admin, email\n                }\n            }\n        } = await login(data);\n\n        if (code) {\n            this.tomato = tomato;\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"vip\", vip);\n            localStorage.setItem(\"admin\", admin);\n            localStorage.setItem(\"username\", data.username);\n            localStorage.setItem(\"email\", email);\n            message.success(\"登录成功\");\n            return true;\n        } else {\n            message.error(errors);\n            return false;\n        }\n    }\n\n    registerRequest = async(data) => {\n        const {\n            data: {\n                code, errors,\n                data: {\n                    token, tomato,\n                    vip, admin, email\n                }\n            }\n        } = await register(data);\n\n        if (code) {\n            this.tomato = tomato;\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"vip\", vip);\n            localStorage.setItem(\"admin\", admin);\n            localStorage.setItem(\"username\", data.username);\n            localStorage.setItem(\"email\", email);\n            Boolean(JSON.parse(localStorage.getItem(\"admin\")));\n            Boolean(JSON.parse(localStorage.getItem(\"vip\")));\n            message.success(\"注册成功自动登录\");\n            return true;\n        } else {\n            message.error(errors);\n            return false;\n        }\n    }\n\n    getTomatosRequest = async() => {\n        const {\n            data: {\n                code, errors,\n                data\n            }\n        } = await getTomatos();\n\n        const { user_report } = data[0];\n\n        if (code) {\n            this.tomatoList = user_report;\n        } else {\n            message.error(errors);\n        }\n    }\n\n    addReportRequest = async(data) => {\n        const {\n            data: {\n                code, errors\n            }\n        } = await addReport(data);\n\n        if (code) {\n            message.success(\"任务记录已上传\");\n        } else {\n            message.error(errors);       \n        }\n    }\n\n    getGoodListRequest = async() => {\n        const {\n            data: {\n                code, errors,\n                data\n            }\n        } = await getGoodList();\n\n        if (code) {\n            this.goodList = data;\n        } else {\n            message.error(errors);\n        }\n    }\n\n    buyGoodRequest = async(data) => {\n        const {\n            data: {\n                code, errors\n            }\n        } = await buyGood(data);\n        \n        if (code) {\n            message.success(\"购买成功\");\n            this.goodList = this.goodList.map(item => {\n                if (item.id === data.goods) {\n                    return {\n                        ...item,\n                        number: item.number - 1\n                    }\n                } else {\n                    return item;\n                }\n            })\n        } else {\n            message.error(errors);\n        }\n    }\n\n    adminSelfRoomRequest = async() => {\n        const {\n            data: {\n                code, data, errors\n            }\n        } = await adminSelfRoom();\n\n        if (code) {\n            if (data.length === 0) {\n                this.listEmpty = true;\n            } else {\n                const { member } = data[0];\n                this.listEmpty = false;\n                this.room = data[0];\n                this.member = member;\n            }\n        } else {\n            message.error(errors);\n        }\n    }\n\n    placeSelfRoomRequest = async() => {\n        const {\n            data: {\n                code, data, errors\n            }\n        } = await placeSelfRoom();\n        \n        if (code) {\n            if (data.length === 0) {\n                this.listEmpty = true;\n            } else {\n                const { member } = data[0];\n                this.listEmpty = false;\n                this.room = data[0];\n                this.member = member;\n            }\n        } else {\n            message.error(errors);\n        }\n    }\n\n    joinRoomRequest = async(data) => {\n        const {\n            data: {\n                code, errors\n            }\n        } = await joinRoom(data);\n        \n        if (code) {\n            message.success(\"成功加入自习室\");\n        } else {\n            message.error(errors);\n        }\n    }\n\n    addComRequest = async(data) => {\n        const {\n            data: {\n                code, msg, errors\n            }\n        } = await addCom(data);\n\n        if (code) {\n            message.success(msg);\n            this.getGoodListRequest();\n        } else {\n            message.error(errors);\n        }\n    }\n\n    modifyComRequest = async(data, id) => {\n        const {\n            data: {\n                code, msg, errors\n            }\n        } = await modifyCom(data, id);\n\n        if (code) {\n            message.success(msg);\n            this.getGoodListRequest();\n        } else {\n            message.error(errors);\n        }\n    }\n\n    deleteCom = async(id) => {\n        const {\n            data: {\n                code, errors, msg\n            }\n        } = await deleteCom(id);\n\n        if (code) {\n            message.success(msg);\n            this.getGoodListRequest();\n        } else {\n            message.error(errors);\n        }\n    }\n\n    modifyRoomNameRequest = async(data, id) => {\n        const {\n            data: {\n                code, msg, errors\n            }\n        } = await modifyRoomName(data, id);\n\n        if (code) {\n            message.success(msg);\n            myStore.adminSelfRoomRequest();\n        } else {\n            message.error(errors);\n        }\n    }\n\n    deleteUserRequest = async(data) => {\n        const {\n            data: {\n                code, msg, errors\n            }\n        } = await deleteUser(data);\n\n        if (code) {\n            message.success(msg);\n        } else {\n            message.error(errors);\n        }\n    }\n\n    deleteGroupRequest = async(id) => {\n        const {\n            data: {\n                code, errors, msg\n            }\n        } = await deleteGroup(id);\n\n        if (code) {\n            message.success(msg);\n        } else {\n            message.error(errors);\n        }\n    }\n\n    quitGroupRequest = async(data) => {\n        const {\n            data: {\n                code, errors, msg\n            }\n        } = await quitGroup(data);\n\n        if (code) {\n            message.success(msg);\n        } else {\n            message.error(errors);\n        }\n    }\n\n    createGroupRequest = async(data) => {\n        const {\n            data: {\n                code, msg, errors\n            }\n        } = await createGroup(data);\n\n        if (code) {\n            message.success(msg);\n        } else {\n            message.error(errors);\n        }\n    }\n}\n\nconst myStore = new Mobx();\nexport default myStore;\n"]},"metadata":{},"sourceType":"module"}