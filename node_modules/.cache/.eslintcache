[{"/Users/wuliangrui/Desktop/库里泡/item/tomato/src/index.js":"1","/Users/wuliangrui/Desktop/库里泡/item/tomato/src/App.js":"2","/Users/wuliangrui/Desktop/库里泡/item/tomato/src/components/Home/index.js":"3","/Users/wuliangrui/Desktop/库里泡/item/tomato/src/components/Login/index.js":"4","/Users/wuliangrui/Desktop/库里泡/item/tomato/src/components/Onchard/index.js":"5","/Users/wuliangrui/Desktop/库里泡/item/tomato/src/components/SelfStudent/index.js":"6","/Users/wuliangrui/Desktop/库里泡/item/tomato/src/store/index.js":"7","/Users/wuliangrui/Desktop/库里泡/item/tomato/src/components/Home/Header/index.js":"8","/Users/wuliangrui/Desktop/库里泡/item/tomato/src/components/Home/Card/index.js":"9","/Users/wuliangrui/Desktop/库里泡/item/tomato/src/services/index.js":"10","/Users/wuliangrui/Desktop/库里泡/item/tomato/src/utils/request.js":"11","/Users/wuliangrui/Desktop/库里泡/item/tomato/src/components/Manage/index.js":"12"},{"size":476,"mtime":1646618918629,"results":"13","hashOfConfig":"14"},{"size":661,"mtime":1646921641259,"results":"15","hashOfConfig":"14"},{"size":244,"mtime":1646642540226,"results":"16","hashOfConfig":"14"},{"size":8040,"mtime":1647354853033,"results":"17","hashOfConfig":"14"},{"size":2623,"mtime":1647355136250,"results":"18","hashOfConfig":"14"},{"size":12097,"mtime":1647359486472,"results":"19","hashOfConfig":"14"},{"size":7828,"mtime":1647052931086,"results":"20","hashOfConfig":"14"},{"size":1268,"mtime":1647358954361,"results":"21","hashOfConfig":"14"},{"size":8502,"mtime":1647357653275,"results":"22","hashOfConfig":"14"},{"size":1249,"mtime":1647052932081,"results":"23","hashOfConfig":"14"},{"size":3442,"mtime":1646988257573,"results":"24","hashOfConfig":"14"},{"size":6568,"mtime":1647355171701,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1g5ykoa",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"41"},"/Users/wuliangrui/Desktop/库里泡/item/tomato/src/index.js",[],[],["71","72"],"/Users/wuliangrui/Desktop/库里泡/item/tomato/src/App.js",[],[],["73","74"],"/Users/wuliangrui/Desktop/库里泡/item/tomato/src/components/Home/index.js",[],[],"/Users/wuliangrui/Desktop/库里泡/item/tomato/src/components/Login/index.js",["75","76"],[],"import React, { useState } from \"react\";\nimport {\n    Form, Input,\n    Button,\n    message,\n} from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport myStore from \"../../store/index\";\nimport \"./index.css\";\n\nconst FormItem = Form.Item;\nconst { Password: InputPassword } = Input;\n\nfunction Login() {\n    const formRef = React.createRef();\n    const [status, setStatus] = useState(true);\n    const navigate = useNavigate();\n\n    const handleRegister = () => {\n        setStatus(!status);\n        formRef.current.resetFields();\n    }\n\n    const handleClickLogin = async(value) => {\n        const result = await myStore.loginRequest(value);\n        formRef.current.resetFields();\n\n        if (result) {\n            navigate(\"/home\");\n        }\n    }\n\n    const handleClickRegister = async(value) => {\n        const {\n            password, password2\n        } = value;\n\n        if (password === password2) {\n            const result = await myStore.registerRequest(value);\n            \n            if (result) {\n                formRef.current.resetFields();\n                navigate(\"/home\");\n            }\n        } else {\n            message.warn(\"密码与确认密码不一致\");\n        }\n    }\n\n    return (\n        <div className=\"login\">\n            <div className=\"content\">\n                <div className=\"header\">\n                    <div>番茄学习法</div>\n                </div>\n                {status\n                    ? (<Form\n                        name=\"basic\"\n                        labelCol={{ span: 6 }}\n                        wrapperCol={{ span: 17 }}\n                        ref={formRef}\n                        onFinish={handleClickLogin}\n                        autoComplete=\"off\"\n                        initialValues={{\n                            \"username\": \"\",\n                            \"password\": \"\",\n                            \"rePassword\": \"\",\n                            \"email\": \"\"\n                        }}\n                    >\n                        <FormItem\n                            label=\"用户名\"\n                            name=\"username\"\n                            className=\"login-username\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your username!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input placeholder=\"请输入用户名\"/>\n                        </FormItem>\n                        <FormItem\n                            label=\"密&emsp;码\"\n                            name=\"password\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!'\n                                    }\n                                ]\n                            }\n                        >\n                            <InputPassword  placeholder=\"请输入密码\"/>\n                        </FormItem>\n                        <FormItem\n                            wrapperCol={{ offset: 10, span: 14 }}\n                        >\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                            >\n                                登陆\n                            </Button>\n                        </FormItem>\n                    </Form>)\n                    : (<Form\n                        name=\"basic\"\n                        labelCol={{ span: 6 }}\n                        wrapperCol={{ span: 17 }}\n                        ref={formRef}\n                        onFinish={handleClickRegister}\n                        autoComplete=\"off\"\n                    >\n                        <FormItem\n                            label=\"昵称\"\n                            name=\"name\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your username!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input placeholder=\"请输入昵称\" />\n                        </FormItem>\n                        <FormItem\n                            label=\"账号\"\n                            name=\"username\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your username!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input placeholder=\"请输入账号\" />\n                        </FormItem>\n                        <FormItem\n                            label=\"密码\"\n                            name=\"password\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!'\n                                    }\n                                ]\n                            }\n                        >\n                            <InputPassword placeholder=\"请输入密码\" />\n                        </FormItem>\n                        <FormItem\n                            label=\"确认密码\"\n                            name=\"password2\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!'\n                                    }\n                                ]\n                            }\n                        >\n                            <InputPassword placeholder=\"请输入密码\" />\n                        </FormItem>\n                        <FormItem\n                            label=\"邮箱\"\n                            name=\"email\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input placeholder=\"请输入邮箱\" />\n                        </FormItem>\n                        <FormItem\n                            wrapperCol={{ offset: 10, span: 14 }}\n                        >\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                            >\n                                注册\n                            </Button>\n                        </FormItem>\n                    </Form>)}\n                <div className=\"footer\">\n                    <a\n                        className=\"register\"\n                        onClick={handleRegister}\n                    >{status ? '注册' : '登陆'}</a>\n                </div>\n                <a\n                    href=\"http://82.156.102.187:8002/admin/login/?next=/admin/\"\n                    className=\"super-man\"\n                    target=\"_blank\"\n                >\n                    超级管理员\n                </a>\n            </div>\n        </div>\n    )\n}\n\nexport default observer(Login);\n",["77","78"],"/Users/wuliangrui/Desktop/库里泡/item/tomato/src/components/Onchard/index.js",["79"],[],"import React, { useEffect } from \"react\";\nimport { Empty, Modal } from \"antd\";\nimport { observer } from \"mobx-react-lite\";\nimport { useNavigate } from \"react-router-dom\";\nimport myStore from \"../../store\";\nimport \"./index.css\";\nimport { LeftCircleOutlined } from '@ant-design/icons';\n\nconst { confirm } = Modal;\n\nfunction Onchard() {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        myStore.getGoodListRequest()\n    }, [])\n\n    const handleBuy = (id) => {\n        confirm({\n            title: \"番茄果园\",\n            content: \"是否确认购买\",\n            okText: \"确认\",\n            cancelText: \"取消\",\n            onOk() {\n                myStore.buyGoodRequest({\n                    goods: id\n                });\n            }\n        })\n    }\n\n    const handleReturn = () => {\n        navigate(\"/home\");\n    }\n\n    return (\n        <div className=\"on-content\">\n            <LeftCircleOutlined\n                className=\"on-return\"\n                onClick={handleReturn}\n            />\n            <div className=\"on-header\">\n                番茄果园\n            </div>\n            <div className=\"on-good\">\n                {\n                    myStore.goodList.length === 0\n                        ? <Empty\n                            className=\"on-empty\"\n                            description=\"没有数据\"\n                            image={Empty.PRESENTED_IMAGE_SIMPLE}\n                        />\n                        : myStore.goodList.map(({ id, name, price, number, img }) => {\n                            return (\n                                <div className=\"on-item\" key={id}>\n                                    <div className=\"on-left\">\n                                        <img className=\"on-item-img\" src={img} />\n                                    </div>\n                                    <div className=\"on-right\">\n                                        <div className=\"on-item-name\">{name}</div>\n                                        <div className=\"on-item-number\">存量: {number}</div>\n                                        <div className=\"on-item-price\">花费: {price}</div>\n                                        <div\n                                            className=\"on-btn\"\n                                            onClick={() => handleBuy(id)}\n                                        >购买</div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default observer(Onchard);","/Users/wuliangrui/Desktop/库里泡/item/tomato/src/components/SelfStudent/index.js",["80"],[],"/Users/wuliangrui/Desktop/库里泡/item/tomato/src/store/index.js",[],[],"/Users/wuliangrui/Desktop/库里泡/item/tomato/src/components/Home/Header/index.js",["81"],[],"import { useNavigate } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport myStore from \"../../../store\";\nimport imgUrl from \"../../../images/tomato.png\";\nimport \"./index.css\";\n\nfunction Header() {\n    const navigate = useNavigate();\n\n    const handleOnchard = () => {\n        navigate(\"/onchard\");\n    }\n\n    const handleSelfStudent = () => {\n        navigate(\"/selfstudent\");\n    }\n\n    const handleManage = () => {\n        navigate(\"/manage\");\n    }\n\n    return (\n        <div className=\"he-con\">\n            <div className=\"he-icon\">\n                <img className=\"he-icon-img\" src={imgUrl} />\n                番茄学习法\n            </div>\n            <div className=\"he-right\">\n                {myStore.admin && <div\n                    className=\"he-manage\"\n                    onClick={handleManage}\n                >管理中心</div>\n                }\n                <div\n                    className=\"he-onchard\"\n                    onClick={handleOnchard}\n                >番茄果园</div>\n                <div \n                    className=\"he-self-student\"\n                    onClick={handleSelfStudent}\n                >番茄自习室</div>\n            </div>\n        </div>\n    )\n}\n\nexport default observer(Header);\n","/Users/wuliangrui/Desktop/库里泡/item/tomato/src/components/Home/Card/index.js",[],[],"/Users/wuliangrui/Desktop/库里泡/item/tomato/src/services/index.js",[],[],"/Users/wuliangrui/Desktop/库里泡/item/tomato/src/utils/request.js",["82","83","84"],[],"import axios from 'axios'\n\nconst baseURL = \"http://82.156.102.187:8002\";\n\naxios.interceptors.request.use(config => {\n    if (config.url === \"/login/\") {\n       localStorage.clear();\n    } else {\n        const token = `JWT ${localStorage.getItem(\"token\")}`;\n        config.headers.Authorization = token;\n    }\n    return config\n}, error => {\n    return Promise.reject(error)\n})\n\naxios.interceptors.response.use(response => {\n    return response\n}, error => {\n    return Promise.resolve(error.response)\n})\n\nfunction checkStatus(response) {\n    // loading\n    // 如果http状态码正常，则直接返回数据\n    if (response && (response.status === 304 || response.status === 400 || response.status >= 200 && response.status < 300)) {\n        return response\n        // 如果不需要除了data之外的数据，可以直接 return response.data\n    }\n    // 异常状态下，把错误信息返回去\n    return {\n        status: -404,\n        msg: '网络异常'\n    }\n}\n\nfunction checkCode(res) {\n    // 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户\n    if (res.status === -404) {\n        // alert(res.msg)\n    }\n    if (res.data && (!res.data.success)) {\n        // alert(res.data.error_msg)\n    }\n    return res\n}\n\nexport default {\n    post(url, data) {\n        return axios({\n            method: 'post',\n            baseURL,\n            url,\n            data,\n            timeout: 10000,\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest',\n                'Content-Type': 'application/json'\n            }\n        }).then(\n            (response) => {\n                return checkStatus(response)\n            }\n        ).then(\n            (res) => {\n                return checkCode(res)\n            }\n        )\n    },\n    get(url, params) {\n        return axios({\n            method: 'get',\n            baseURL,\n            url,\n            params, // get 请求时带的参数\n            timeout: 10000,\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest'\n            }\n        }).then(\n            (response) => {\n                return checkStatus(response)\n            }\n        ).then(\n            (res) => {\n                return checkCode(res)\n            }\n        )\n    },\n    patch(url, data) {\n        return axios({\n            method: 'patch',\n            baseURL,\n            url,\n            data,\n            timeout: 10000\n        }).then(\n            (response) => {\n                return checkStatus(response)\n            }\n        ).then(\n            (res) => {\n                return checkCode(res)\n            }\n        )\n    },\n    delete(url, data) {\n        return axios({\n            method: 'delete',\n            baseURL,\n            url,\n            data,\n            timeout: 1000\n        }).then(\n            (response) => {\n                return checkStatus(response)\n            }\n        ).then(\n            (res) => {\n                return checkCode(res);\n            }\n        )\n    },\n    put(url, data) {\n        return axios({\n            method: 'put',\n            baseURL,\n            url,\n            data,\n            timeout: 1000\n        }).then(\n            (response) => {\n                return checkStatus(response)\n            }\n        ).then(\n            (res) => {\n                return checkCode(res);\n            }\n        )\n    }\n}",["85","86"],"/Users/wuliangrui/Desktop/库里泡/item/tomato/src/components/Manage/index.js",["87"],[],"import React, { useEffect, useState } from \"react\";\nimport {\n    Empty, Modal, Upload,\n    InputNumber, Input, Button\n} from \"antd\";\nimport { observer } from \"mobx-react-lite\";\nimport { useNavigate } from \"react-router-dom\";\nimport myStore from \"../../store\";\nimport \"./index.css\";\nimport {\n    LeftCircleOutlined, UploadOutlined\n} from '@ant-design/icons';\n\nfunction Manage() {\n    const navigate = useNavigate();\n    const [status, setStatus] = useState(false);\n    const [id, setId] = useState(0);\n    const [url, setUrl] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [price, setPrice] = useState(0);\n    const [number, setNumber] = useState(0);\n    const [files, setFiles] = useState([]);\n    const [isVisible, setIsVisible] = useState(false);\n\n    useEffect(() => {\n        myStore.getGoodListRequest()\n    }, [])\n\n    const handleModify = (id, img, name, price, number) => {\n        setId(id);\n        setName(name);\n        setPrice(price);\n        setNumber(number);\n        setUrl(img);\n        setStatus(false);\n        setIsVisible(true);\n    }\n\n    const handleReturn = () => {\n        navigate(\"/home\");\n    }\n\n    const handleAdd = () => {\n        setName(\"\");\n        setPrice(0);\n        setNumber(0);\n        setFiles([]);\n        setStatus(true);\n        setIsVisible(true);\n    }\n\n    const handleOk = () => {\n        setName(\"\");\n        setPrice(0);\n        setNumber(0);\n        setFiles([]);\n        setIsVisible(false);\n\n        if (status) {\n            myStore.addComRequest({\n                name,\n                price,\n                number,\n                img: url\n            })\n        } else {\n            myStore.modifyComRequest({\n                name,\n                price,\n                number,\n                img: url\n            }, id)\n        }\n    }\n\n    const handleCancel = () => {\n        setName(\"\");\n        setPrice(0);\n        setNumber(0);\n        setFiles([]);\n        setIsVisible(false);\n    }\n\n    const handleDelete = (id) => {\n        myStore.deleteCom(id);\n    }\n\n    const props = {\n        name: \"file\",\n        action: \"http://82.156.102.187:8002/upload/\",\n        headers: {\n            authorization: `JWT ${localStorage.getItem(\"token\")}`\n        },\n        maxCount: 1,\n        fileList: files,\n        onChange(info) {\n            const {\n                file: {\n                    status, response\n                },\n                fileList\n            } = info;\n\n            setFiles(fileList);\n            if (status === \"done\") {\n                const {\n                    data: { url }\n                } = response;\n\n                setUrl(url);\n            }\n        }\n    }\n\n    return (\n        <div className=\"on-content\">\n            <Modal\n                title=\"番茄学习法\"\n                visible={isVisible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                cancelText=\"取消\"\n                okText=\"提交\"\n            >\n                <div className=\"man-input\">\n                    <div className=\"man-label\">名字</div>\n                    <Input\n                        className=\"man-input-inner\"\n                        value={name}\n                        onChange={({ target: { value } }) => setName(value)}\n                    />\n                </div>\n                <div className=\"man-input\">\n                    <div className=\"man-label\">花费</div>\n                    <InputNumber\n                        className=\"man-inputnumber-inner\"\n                        min={0}\n                        value={price}\n                        onChange={value => setPrice(value)}\n                    />\n                </div>\n                <div className=\"man-input\">\n                    <div className=\"man-label\">数量</div>\n                    <InputNumber\n                        className=\"man-inputnumber-inner\"\n                        min={0}\n                        value={number}\n                        onChange={value => setNumber(value)}\n                    />\n                </div>\n                <Upload\n                    {...props}\n                    className=\"man-upload\"\n                >\n                    <Button icon={<UploadOutlined />}>Click to Upload</Button>\n                </Upload>\n            </Modal>\n            <LeftCircleOutlined\n                className=\"on-return\"\n                onClick={handleReturn}\n            />\n            <div className=\"on-header\">\n                番茄果园\n            </div>\n            <div className=\"on-good\">\n                {\n                    myStore.goodList.length === 0\n                        ? <Empty\n                            className=\"on-empty\"\n                            description=\"没有数据\"\n                            image={Empty.PRESENTED_IMAGE_SIMPLE}\n                        />\n                        : myStore.goodList.map(({ id, name, price, number, img }) => {\n                            return (\n                                <div className=\"on-item\" key={id}>\n                                    <div className=\"on-left\">\n                                        <img className=\"on-item-img\" src={img} />\n                                    </div>\n                                    <div className=\"on-right\">\n                                        <div className=\"man-item-name\">{name}</div>\n                                        <div className=\"man-item-number\">存量: {number}</div>\n                                        <div className=\"man-item-price\">花费: {price}</div>\n                                        <div\n                                            className=\"on-btn man-btn\"\n                                            onClick={() => handleModify(id, img, name, price, number)}\n                                        >修改</div>\n                                        <div\n                                            className=\"on-btn man-btn\"\n                                            onClick={() => handleDelete(id)}\n                                        >删除</div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                }\n                <div\n                    className=\"man-add\"\n                    onClick={handleAdd}\n                >\n                    <div className=\"add-column\"></div>\n                    <div className=\"add-row\"></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default observer(Manage);",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"88","replacedBy":"92"},{"ruleId":"90","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":202,"column":21,"nodeType":"96","endLine":205,"endColumn":22},{"ruleId":"97","severity":1,"message":"98","line":207,"column":17,"nodeType":"96","messageId":"99","endLine":211,"endColumn":18,"fix":"100"},{"ruleId":"88","replacedBy":"101"},{"ruleId":"90","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":57,"column":41,"nodeType":"96","endLine":57,"endColumn":82},{"ruleId":"103","severity":1,"message":"104","line":229,"column":45,"nodeType":"96","endLine":229,"endColumn":93},{"ruleId":"103","severity":1,"message":"104","line":25,"column":17,"nodeType":"96","endLine":25,"endColumn":61},{"ruleId":"105","severity":1,"message":"106","line":26,"column":73,"nodeType":"107","messageId":"108","endLine":26,"endColumn":75},{"ruleId":"105","severity":1,"message":"106","line":26,"column":99,"nodeType":"107","messageId":"108","endLine":26,"endColumn":101},{"ruleId":"109","severity":1,"message":"110","line":48,"column":1,"nodeType":"111","endLine":141,"endColumn":2},{"ruleId":"88","replacedBy":"112"},{"ruleId":"90","replacedBy":"113"},{"ruleId":"103","severity":1,"message":"104","line":177,"column":41,"nodeType":"96","endLine":177,"endColumn":82},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],["114"],["115"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"116","text":"117"},["114"],["115"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["114"],["115"],"no-global-assign","no-unsafe-negation",[7737,7737]," rel=\"noreferrer\""]