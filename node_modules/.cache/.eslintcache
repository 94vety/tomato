[{"/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/index.js":"1","/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/App.js":"2","/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/components/Login/index.js":"3","/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/store/index.js":"4","/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/services/index.js":"5","/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/utils/request.js":"6","/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/components/Home/index.js":"7","/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/components/Home/Header/index.js":"8","/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/components/SelfStudent/index.js":"9","/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/components/Onchard/index.js":"10","/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/components/Home/Card/index.js":"11"},{"size":476,"mtime":1646618918629,"results":"12","hashOfConfig":"13"},{"size":549,"mtime":1646642286265,"results":"14","hashOfConfig":"13"},{"size":7039,"mtime":1646663448251,"results":"15","hashOfConfig":"13"},{"size":2162,"mtime":1646665474680,"results":"16","hashOfConfig":"13"},{"size":227,"mtime":1646661821911,"results":"17","hashOfConfig":"13"},{"size":3076,"mtime":1646621983716,"results":"18","hashOfConfig":"13"},{"size":244,"mtime":1646642540226,"results":"19","hashOfConfig":"13"},{"size":780,"mtime":1646642422920,"results":"20","hashOfConfig":"13"},{"size":127,"mtime":1646642234011,"results":"21","hashOfConfig":"13"},{"size":115,"mtime":1646642162706,"results":"22","hashOfConfig":"13"},{"size":6317,"mtime":1646666881235,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1ifqkqv",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/index.js",[],[],["61","62"],"/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/App.js",[],[],["63","64"],"/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/components/Login/index.js",["65"],[],"import React, { useState } from \"react\";\nimport {\n    Form, Input,\n    Button,\n    message,\n} from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport myStore from \"../../store/index\";\nimport \"./index.css\";\n\nconst FormItem = Form.Item;\nconst { Password: InputPassword } = Input;\n\nfunction Login() {\n    const formRef = React.createRef();\n    const [status, setStatus] = useState(true);\n    const navigate = useNavigate();\n\n    const handleRegister = () => {\n        setStatus(!status);\n        formRef.current.resetFields();\n    }\n\n    const handleClickLogin = async(value) => {\n        const result = await myStore.loginRequest(value);\n        formRef.current.resetFields();\n\n        if (result) {\n            navigate(\"/home\");\n        }\n    }\n\n    const handleClickRegister = async(value) => {\n        console.log(value);\n        const {\n            password, password2\n        } = value;\n\n        if (password === password2) {\n            const result = await myStore.registerRequest(value);\n            \n            if (result) {\n                formRef.current.resetFields();\n                navigate(\"/home\");\n            }\n        } else {\n            message.warn(\"密码与确认密码不一致\");\n        }\n    }\n\n    return (\n        <div className=\"login\">\n            <div className=\"content\">\n                <div className=\"header\">\n                    <div>番茄学习法</div>\n                </div>\n                {status\n                    ? (<Form\n                        name=\"basic\"\n                        labelCol={{ span: 6 }}\n                        wrapperCol={{ span: 17 }}\n                        ref={formRef}\n                        onFinish={handleClickLogin}\n                        autoComplete=\"off\"\n                        initialValues={{\n                            \"username\": \"\",\n                            \"password\": \"\",\n                            \"rePassword\": \"\",\n                            \"email\": \"\"\n                        }}\n                    >\n                        <FormItem\n                            label=\"用户名\"\n                            name=\"username\"\n                            className=\"login-username\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your username!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label=\"密码\"\n                            name=\"password\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!'\n                                    }\n                                ]\n                            }\n                        >\n                            <InputPassword />\n                        </FormItem>\n                        <FormItem\n                            wrapperCol={{ offset: 10, span: 14 }}\n                        >\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                            >\n                                登陆\n                            </Button>\n                        </FormItem>\n                    </Form>)\n                    : (<Form\n                        name=\"basic\"\n                        labelCol={{ span: 6 }}\n                        wrapperCol={{ span: 17 }}\n                        ref={formRef}\n                        onFinish={handleClickRegister}\n                        autoComplete=\"off\"\n                    >\n                        <FormItem\n                            label=\"用户名\"\n                            name=\"username\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your username!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            label=\"密码\"\n                            name=\"password\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!'\n                                    }\n                                ]\n                            }\n                        >\n                            <InputPassword />\n                        </FormItem>\n                        <FormItem\n                            label=\"确认密码\"\n                            name=\"password2\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!'\n                                    }\n                                ]\n                            }\n                        >\n                            <InputPassword />\n                        </FormItem>\n                        <FormItem\n                            label=\"邮箱\"\n                            name=\"email\"\n                            rules={\n                                [\n                                    {\n                                        required: true,\n                                        message: 'Please input your password!'\n                                    }\n                                ]\n                            }\n                        >\n                            <Input />\n                        </FormItem>\n                        <FormItem\n                            wrapperCol={{ offset: 10, span: 14 }}\n                        >\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                            >\n                                注册\n                            </Button>\n                        </FormItem>\n                    </Form>)}\n                <div className=\"footer\">\n                    <a\n                        className=\"register\"\n                        onClick={handleRegister}\n                    >{status ? '注册' : '登陆'}</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default observer(Login);\n","/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/store/index.js",[],[],"/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/services/index.js",[],[],"/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/utils/request.js",["66","67","68"],[],"import axios from 'axios'\n\nconst baseURL = \"http://82.156.102.187:8002\";\n\naxios.interceptors.request.use(config => {\n    if (config.url === \"/login/\") {\n       localStorage.clear();\n    } else {\n        const token = `JWT ${localStorage.getItem(\"token\")}`;\n        config.headers.Authorization = token;\n    }\n    return config\n}, error => {\n    return Promise.reject(error)\n})\n\naxios.interceptors.response.use(response => {\n    return response\n}, error => {\n    return Promise.resolve(error.response)\n})\n\nfunction checkStatus(response) {\n    // loading\n    // 如果http状态码正常，则直接返回数据\n    if (response && (response.status === 304 || response.status === 400 || response.status >= 200 && response.status < 300)) {\n        return response\n        // 如果不需要除了data之外的数据，可以直接 return response.data\n    }\n    // 异常状态下，把错误信息返回去\n    return {\n        status: -404,\n        msg: '网络异常'\n    }\n}\n\nfunction checkCode(res) {\n    // 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户\n    if (res.status === -404) {\n        // alert(res.msg)\n    }\n    if (res.data && (!res.data.success)) {\n        // alert(res.data.error_msg)\n    }\n    return res\n}\n\nexport default {\n    post(url, data) {\n        return axios({\n            method: 'post',\n            baseURL,\n            url,\n            data,\n            timeout: 10000,\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest',\n                'Content-Type': 'application/json'\n            }\n        }).then(\n            (response) => {\n                return checkStatus(response)\n            }\n        ).then(\n            (res) => {\n                return checkCode(res)\n            }\n        )\n    },\n    get(url, params) {\n        return axios({\n            method: 'get',\n            baseURL,\n            url,\n            params, // get 请求时带的参数\n            timeout: 10000,\n            headers: {\n                'X-Requested-With': 'XMLHttpRequest'\n            }\n        }).then(\n            (response) => {\n                return checkStatus(response)\n            }\n        ).then(\n            (res) => {\n                return checkCode(res)\n            }\n        )\n    },\n    patch(url, data) {\n        return axios({\n            method: 'patch',\n            baseURL,\n            url,\n            data,\n            timeout: 10000\n        }).then(\n            (response) => {\n                return checkStatus(response)\n            }\n        ).then(\n            (res) => {\n                return checkCode(res)\n            }\n        )\n    },\n    delete(url, data) {\n        return axios({\n            method: 'delete',\n            baseURL,\n            url,\n            data,\n            timeout: 1000\n        }).then(\n            (response) => {\n                return checkStatus(response)\n            }\n        ).then(\n            (res) => {\n                return checkCode(res);\n            }\n        )\n    }\n}","/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/components/Home/index.js",[],[],"/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/components/Home/Header/index.js",[],[],"/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/components/SelfStudent/index.js",[],[],"/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/components/Onchard/index.js",[],[],"/Users/wuliangrui/Desktop/库里泡/item/tomato/item/src/components/Home/Card/index.js",[],[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"69","replacedBy":"73"},{"ruleId":"71","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":189,"column":21,"nodeType":"77","endLine":192,"endColumn":22},{"ruleId":"78","severity":1,"message":"79","line":26,"column":73,"nodeType":"80","messageId":"81","endLine":26,"endColumn":75},{"ruleId":"78","severity":1,"message":"79","line":26,"column":99,"nodeType":"80","messageId":"81","endLine":26,"endColumn":101},{"ruleId":"82","severity":1,"message":"83","line":48,"column":1,"nodeType":"84","endLine":124,"endColumn":2},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],["85"],["86"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]